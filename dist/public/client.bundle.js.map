{"version":3,"file":"client.bundle.js","mappings":"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","sources":["webpack://rainbow-leaderboard/./public/leaderboard-client.ts","webpack://rainbow-leaderboard/webpack/bootstrap","webpack://rainbow-leaderboard/webpack/before-startup","webpack://rainbow-leaderboard/webpack/startup","webpack://rainbow-leaderboard/webpack/after-startup"],"sourcesContent":["// Import type definitions\r\nimport { \r\n  LeaderboardEntry, \r\n  ClientConfig, \r\n  TimerState, \r\n  CountdownValues, \r\n  StorageResult \r\n} from '../types';\r\n\r\n// TypeScript interface for the global client_config\r\ndeclare global {\r\n  interface Window {\r\n    client_config: ClientConfig;\r\n  }\r\n}\r\n\r\n// Storage utility functions to make testing easier\r\nfunction saveToStorage(key: string, value: any): boolean {\r\n  try {\r\n    localStorage.setItem(key, typeof value === 'string' ? value : JSON.stringify(value));\r\n    return true;\r\n  } catch (error) {\r\n    console.error('Error saving to storage:', error);\r\n    return false;\r\n  }\r\n}\r\n\r\nfunction getFromStorage(key: string, defaultValue: any = null): StorageResult {\r\n  try {\r\n    const item = localStorage.getItem(key);\r\n    if (item === null) return defaultValue;\r\n    \r\n    // Try to parse as JSON if it looks like JSON\r\n    if (item.startsWith('{') || item.startsWith('[')) {\r\n      try {\r\n        return JSON.parse(item);\r\n      } catch (e) {\r\n        // If parsing fails, return as string\r\n        return item;\r\n      }\r\n    }\r\n    return item;\r\n  } catch (error) {\r\n    console.error('Error reading from storage:', error);\r\n    return defaultValue;\r\n  }\r\n}\r\n\r\n// Function to show loading UI\r\nfunction showLoadingUI(): void {\r\n  const loadingContainer = document.querySelector('.loading-container') as HTMLElement;\r\n  const leaderboardTable = document.querySelector('.leaderboard table') as HTMLTableElement;\r\n  \r\n  // Show loading animation, hide table\r\n  if (loadingContainer && leaderboardTable) {\r\n    loadingContainer.style.display = 'flex';\r\n    leaderboardTable.style.display = 'none';\r\n  }\r\n}\r\n\r\n// Function to hide loading UI\r\nfunction hideLoadingUI(): void {\r\n  const loadingContainer = document.querySelector('.loading-container') as HTMLElement;\r\n  const leaderboardTable = document.querySelector('.leaderboard table') as HTMLTableElement;\r\n  \r\n  // Hide loading animation, show table\r\n  if (loadingContainer && leaderboardTable) {\r\n    loadingContainer.style.display = 'none';\r\n    leaderboardTable.style.display = 'table';\r\n  }\r\n}\r\n\r\n// API utility function to make testing easier\r\nfunction fetchApi<T>(url: string, options: RequestInit = {}): Promise<T> {\r\n  const controller = new AbortController();\r\n  const timeoutId = setTimeout(() => controller.abort(), 120000); // 2 minutes\r\n  \r\n  const fetchOptions: RequestInit = {\r\n    ...options,\r\n    signal: controller.signal\r\n  };\r\n  \r\n  return fetch(url, fetchOptions)\r\n    .then(response => {\r\n      clearTimeout(timeoutId);\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      return response.json() as Promise<T>;\r\n    })\r\n    .catch(error => {\r\n      clearTimeout(timeoutId);\r\n      console.error('Error fetching from API:', error);\r\n      throw error;\r\n    });\r\n}\r\n\r\n// Function to determine API URL based on environment\r\nfunction getApiUrl(): string {\r\n  const isLocalhost = \r\n    window.location.protocol === 'file:' || \r\n    window.location.hostname === 'localhost' || \r\n    window.location.hostname === '127.0.0.1' ||\r\n    window.location.hostname.includes('192.168.');\r\n  \r\n  return isLocalhost \r\n    ? `${window.client_config.localApiUrl}/leaderboard`\r\n    : `${window.client_config.apiBaseUrl}/leaderboard`;\r\n}\r\n\r\n// Function to fetch data from our api\r\nfunction fetchLeaderboardData(): Promise<LeaderboardEntry[]> {\r\n  const apiUrl = getApiUrl();\r\n  console.log(`Fetching data from: ${apiUrl}`);\r\n  \r\n  // Call our API endpoint\r\n  return fetchApi<{ data: LeaderboardEntry[] }>(apiUrl)\r\n    .then(response => response.data)\r\n    .catch(error => {\r\n      // Show error message in the UI\r\n      showErrorMessage();\r\n      throw error;\r\n    });\r\n}\r\n\r\n// Function to render the leaderboard with the data\r\nfunction renderLeaderboard(data: LeaderboardEntry[]): void {\r\n  const tbody = document.querySelector('.leaderboard tbody');\r\n  if (!tbody) {\r\n    console.error('Leaderboard table body not found');\r\n    return;\r\n  }\r\n  \r\n  tbody.innerHTML = ''; // Clear existing content\r\n  \r\n  // Sort data by points (highest first)\r\n  const sortedData = [...data].sort((a, b) => b.points - a.points);\r\n  // Create a rainbow gradient with enough colors for all entries\r\n  const hueIncrement = 360 / (sortedData.length || 1);\r\n\r\n  // Render each entry\r\n  sortedData.forEach((entry, index) => {\r\n    const row = document.createElement('tr');\r\n    \r\n    // Set rainbow background based on position, but with less intensity\r\n    // Changed from gradient to solid color with lower opacity\r\n    const hue = index * hueIncrement;\r\n    row.style.background = `hsla(${hue}, 100%, 90%, 0.3)`;\r\n    \r\n    // Add medal/trophy for top 3\r\n    let medal = '';\r\n    if (index === 0) {\r\n      medal = '🏆 '; // Gold trophy for 1st place\r\n    } else if (index === 1) {\r\n      medal = '🥈 '; // Silver medal for 2nd place\r\n    } else if (index === 2) {\r\n      medal = '🥉 '; // Bronze medal for 3rd place\r\n    }\r\n    \r\n    // Create the cells\r\n    const nameCell = document.createElement('td');\r\n    nameCell.className = 'member-name';\r\n    nameCell.innerHTML = `${medal}${entry.name}`;\r\n    \r\n    const pointsCell = document.createElement('td');\r\n    pointsCell.className = 'member-points';\r\n    pointsCell.textContent = entry.points.toString();\r\n    \r\n    // Add cells to the row\r\n    row.appendChild(nameCell);\r\n    row.appendChild(pointsCell);\r\n    \r\n    // Add the row to the table\r\n    tbody.appendChild(row);\r\n  });\r\n}\r\n\r\n// Function to update refresh time and start countdown\r\nfunction updateRefreshTimeAndStartCountdown(timerState: TimerState, refreshInterval: number): TimerState {\r\n  // Data successfully fetched, update last refresh time\r\n  const refreshTime = new Date().getTime();\r\n  \r\n  // Store in localStorage to persist between page reloads\r\n  saveToStorage('lastRefreshTime', refreshTime.toString());\r\n  \r\n  // Start/restart the countdown timer\r\n  return startCountdownTimer(timerState, refreshInterval);\r\n}\r\n\r\n// Function to show error message with sad unicorn\r\nfunction showErrorMessage(): void {\r\n  const tableBody = document.querySelector('.leaderboard tbody');\r\n  if (!tableBody) {\r\n    console.error('Leaderboard table body not found');\r\n    return;\r\n  }\r\n  \r\n  tableBody.innerHTML = ''; // Clear existing rows\r\n  \r\n  // Create a single row with a sad unicorn message\r\n  const errorRow = document.createElement('tr');\r\n  errorRow.innerHTML = `\r\n    <td colspan=\"2\" class=\"error-message\">\r\n      <div class=\"sad-unicorn\">🦄😢</div>\r\n      <p>Oh no! Couldn't fetch the leaderboard data.</p>\r\n      <p>Please try again in a few minutes.</p>\r\n    </td>\r\n  `;\r\n  tableBody.appendChild(errorRow);\r\n}\r\n\r\n// Function to calculate countdown time values\r\nfunction calculateCountdownValues(timeRemaining: number): CountdownValues {\r\n  // Handle negative time\r\n  if (timeRemaining <= 0) {\r\n    return { minutes: 0, seconds: 0, isUrgent: false };\r\n  }\r\n  \r\n  // Calculate minutes and seconds\r\n  const minutes = Math.floor(timeRemaining / (1000 * 60));\r\n  const seconds = Math.floor((timeRemaining % (1000 * 60)) / 1000);\r\n  \r\n  // Determine if time is running low\r\n  const isUrgent = minutes === 0 && seconds <= 30;\r\n  \r\n  return { minutes, seconds, isUrgent };\r\n}\r\n\r\n// Function to update the countdown UI with minutes and seconds\r\nfunction updateCountdownUI(minutes: number, seconds: number, isUrgent: boolean = false): void {\r\n  const minutesElement = document.getElementById('minutes');\r\n  const secondsElement = document.getElementById('seconds');\r\n  \r\n  if (!minutesElement || !secondsElement) {\r\n    console.error('Countdown elements not found in the DOM');\r\n    return;\r\n  }\r\n  \r\n  // Update the display\r\n  minutesElement.textContent = minutes.toString().padStart(2, '0');\r\n  secondsElement.textContent = seconds.toString().padStart(2, '0');\r\n  \r\n  // Add visual effects when time is running low\r\n  const countdownElement = document.querySelector('.countdown');\r\n  if (countdownElement) {\r\n    if (isUrgent) {\r\n      countdownElement.classList.add('urgent');\r\n    } else {\r\n      countdownElement.classList.remove('urgent');\r\n    }\r\n  }\r\n}\r\n\r\n// Function to refresh data when countdown ends\r\nfunction refreshDataWhenCountdownEnds(timerState: TimerState, refreshInterval: number): void {\r\n  // Time's up! Refresh the data\r\n  if (timerState.countdownInterval) {\r\n    clearInterval(timerState.countdownInterval);\r\n  }\r\n  showLoadingUI(); // Show loading UI before fetching\r\n  fetchLeaderboardData()\r\n    .then(renderLeaderboard)\r\n    .then(() => {\r\n      const newTimerState = updateRefreshTimeAndStartCountdown(timerState, refreshInterval); // Update refresh time after successful fetch\r\n      hideLoadingUI(); // Hide loading UI after rendering\r\n      return newTimerState;\r\n    })\r\n    .catch(error => {\r\n      console.error('Error refreshing data:', error);\r\n      showErrorMessage();\r\n      hideLoadingUI(); // Hide loading UI on error\r\n    });\r\n}\r\n\r\n// Function to start and manage the countdown timer\r\nfunction startCountdownTimer(timerState: TimerState = {}, refreshInterval: number): TimerState {\r\n  // Clear any existing interval\r\n  if (timerState.countdownInterval) {\r\n    clearInterval(timerState.countdownInterval);\r\n  }\r\n\r\n  // Create a new timer state if none provided\r\n  const newTimerState: TimerState = { ...timerState };\r\n\r\n  // Function to process the countdown (defined within scope to avoid global namespace pollution)\r\n  const processCountdown = () => {\r\n    const now = new Date().getTime();\r\n    const lastRefresh = getFromStorage('lastRefreshTime', now) as string;\r\n    const nextRefreshTime = parseInt(lastRefresh as string) + refreshInterval;\r\n    \r\n    // Time remaining in milliseconds\r\n    const timeRemaining = nextRefreshTime - now;\r\n    \r\n    if (timeRemaining <= 0) {\r\n      refreshDataWhenCountdownEnds(newTimerState, refreshInterval);\r\n      return;\r\n    }\r\n    \r\n    // Calculate time values and update UI\r\n    const { minutes, seconds, isUrgent } = calculateCountdownValues(timeRemaining);\r\n    updateCountdownUI(minutes, seconds, isUrgent);\r\n  };\r\n  \r\n  // Update the timer immediately once\r\n  processCountdown();\r\n  \r\n  // Then update every second\r\n  newTimerState.countdownInterval = window.setInterval(processCountdown, 1000);\r\n  \r\n  return newTimerState;\r\n}\r\n\r\n// Function to initialize the page\r\nfunction initializePage(): void {\r\n  console.log('DOM loaded, initializing...');\r\n  \r\n  // Configuration values - defined locally instead of globally\r\n  const refreshInterval = 10 * 60 * 1000; // 10 minutes in milliseconds\r\n  \r\n  // Set the current month from config\r\n  try {\r\n    const currentMonthElement = document.getElementById('current-month');\r\n    if (currentMonthElement && window.client_config) {\r\n      currentMonthElement.textContent = `${window.client_config.currentMonth} ${window.client_config.currentYear}`;\r\n    } else if (currentMonthElement) {\r\n      // Fallback if config is not available\r\n      currentMonthElement.textContent = 'Error: Couldnt find month!';\r\n    }\r\n  } catch (error) {\r\n    console.error('Error setting month:', error);\r\n  }\r\n  \r\n  // Timer state object: { countdownInterval: number }\r\n  let timerState: TimerState = {};\r\n  \r\n  // Fetch data from cache or API\r\n  const lastRefreshTime = getFromStorage('lastRefreshTime', null);\r\n  \r\n  if (lastRefreshTime) {\r\n    const now = new Date().getTime();\r\n    const nextRefreshTime = parseInt(lastRefreshTime as string) + refreshInterval;\r\n    \r\n    // If it's been more than the refresh interval since the last refresh, fetch new data\r\n    if (now >= nextRefreshTime) {\r\n      showLoadingUI(); // Show loading UI before fetching\r\n      fetchLeaderboardData()\r\n        .then(renderLeaderboard)\r\n        .then(() => {\r\n          timerState = updateRefreshTimeAndStartCountdown(timerState, refreshInterval); // Update refresh time after successful fetch\r\n          hideLoadingUI(); // Hide loading UI after rendering\r\n        })\r\n        .catch(error => {\r\n          console.error('Error loading initial data:', error);\r\n          showErrorMessage();\r\n        });\r\n    } else {\r\n      // Otherwise, start the countdown and use cached data if available\r\n      timerState = startCountdownTimer(timerState, refreshInterval);\r\n      \r\n      // Try to load cached data\r\n      const cachedData = getFromStorage('leaderboardData', null) as LeaderboardEntry[] | null;\r\n      if (cachedData) {\r\n        renderLeaderboard(cachedData);\r\n      } else {\r\n        // If no cached data, fetch new data anyway\r\n        showLoadingUI(); // Show loading UI before fetching\r\n        fetchLeaderboardData()\r\n          .then(data => {\r\n            renderLeaderboard(data);\r\n            saveToStorage('leaderboardData', data);\r\n            timerState = updateRefreshTimeAndStartCountdown(timerState, refreshInterval); // Update refresh time after successful fetch\r\n            hideLoadingUI(); // Hide loading UI after rendering\r\n          })\r\n          .catch(error => {\r\n            console.error('Error loading initial data:', error);\r\n            showErrorMessage();\r\n            hideLoadingUI(); // Hide loading UI on error\r\n          });\r\n      }\r\n    }\r\n  } else {\r\n    // First visit, fetch data\r\n    showLoadingUI(); // Show loading UI before fetching\r\n    fetchLeaderboardData()\r\n      .then(data => {\r\n        renderLeaderboard(data);\r\n        saveToStorage('leaderboardData', data);\r\n        timerState = updateRefreshTimeAndStartCountdown(timerState, refreshInterval); // Update refresh time after successful fetch\r\n        hideLoadingUI(); // Hide loading UI after rendering\r\n      })\r\n      .catch(error => {\r\n        console.error('Error loading initial data:', error);\r\n        showErrorMessage();\r\n        hideLoadingUI(); // Hide loading UI on error\r\n      });\r\n  }\r\n}\r\n\r\n// Only attach DOM event listeners in browser environment\r\nif (typeof document !== 'undefined') {\r\n  // Initialize the page when DOM is loaded\r\n  document.addEventListener('DOMContentLoaded', initializePage);\r\n}\r\n\r\n// Export functions for testing\r\nif (typeof module !== 'undefined' && module.exports) {\r\n  module.exports = {\r\n    calculateCountdownValues,\r\n    saveToStorage,\r\n    getFromStorage,\r\n    updateRefreshTimeAndStartCountdown,\r\n    startCountdownTimer,\r\n    initializePage\r\n  };\r\n} else {\r\n  // For browser environment, export to window if needed\r\n  (window as any).leaderboardClient = {\r\n    calculateCountdownValues,\r\n    saveToStorage,\r\n    getFromStorage,\r\n    updateRefreshTimeAndStartCountdown,\r\n    startCountdownTimer\r\n  };\r\n}\r\n\r\n// Also export for TypeScript modules\r\nexport {\r\n  calculateCountdownValues,\r\n  saveToStorage,\r\n  getFromStorage,\r\n  updateRefreshTimeAndStartCountdown,\r\n  startCountdownTimer,\r\n  initializePage\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./public/leaderboard-client.ts\");\n",""],"names":[],"sourceRoot":""}